Inizializzare il DB all'interno della cartella:
rm -rf metastore_db 
schematool -dbType derby -initSchema

CREATE TABLE products_users_score (productId STRING, userId STRING, score INT) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t';

LOAD DATA LOCAL INPATH './test_30_record.txt' OVERWRITE INTO TABLE products_users_score;

chmod 777 ./users_products.py

ADD FILE ./users_products.py;

CREATE TABLE output AS
SELECT TRANSFORM(products_users_score.productId, products_users_score.userId, products_users_score.score)
USING 'python3 users_products.py' AS userid_1, userid_2, products
FROM products_users_score

SELECT * FROM output ORDER BY userid_1


INSERT INTO products_users_score VALUES ('B0009XLVG0', 'ADT0SRK1MGOEU', 4) 
INSERT INTO products_users_score VALUES ('B006K2ZZ7K', 'A2725IB4YY9JEB', 4) 
INSERT INTO products_users_score VALUES ('B001GVISJM', 'A2725IB4YY9JEB', 5)
INSERT INTO products_users_score VALUES ('B006K2ZZ7K', 'A1WO0KGLPR5PV6', 5) 


CREATE TABLE output AS
SELECT userId, productId, score
FROM products_users_score
GROUP BY userId, productId, score
ORDER BY userId


SELECT userId, productId, score
FROM (
    SELECT userId, productId, row_number() 
           over (PARTITION BY userId, score ORDER BY score DESC) as rank, score
    FROM products_users_score
) ranked_mytable
WHERE ranked_mytable.rank < 2
ORDER BY userId





SELECT userId, productId, score
FROM (
    SELECT userId, productId, rank(score) as rank, score
    FROM products_users_score
    DISTRIBUTE BY userId, productId
    SORT BY userId, productId, score desc
) a 
WHERE rank < 5
ORDER BY page-id, rank

